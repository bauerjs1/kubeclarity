// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PackagesApplicationResourcesSortKey packages application resources sort key
//
// swagger:model PackagesApplicationResourcesSortKey
type PackagesApplicationResourcesSortKey string

func NewPackagesApplicationResourcesSortKey(value PackagesApplicationResourcesSortKey) *PackagesApplicationResourcesSortKey {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PackagesApplicationResourcesSortKey.
func (m PackagesApplicationResourcesSortKey) Pointer() *PackagesApplicationResourcesSortKey {
	return &m
}

const (

	// PackagesApplicationResourcesSortKeyResourceName captures enum value "resourceName"
	PackagesApplicationResourcesSortKeyResourceName PackagesApplicationResourcesSortKey = "resourceName"

	// PackagesApplicationResourcesSortKeyResourceHash captures enum value "resourceHash"
	PackagesApplicationResourcesSortKeyResourceHash PackagesApplicationResourcesSortKey = "resourceHash"
)

// for schema
var packagesApplicationResourcesSortKeyEnum []interface{}

func init() {
	var res []PackagesApplicationResourcesSortKey
	if err := json.Unmarshal([]byte(`["resourceName","resourceHash"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		packagesApplicationResourcesSortKeyEnum = append(packagesApplicationResourcesSortKeyEnum, v)
	}
}

func (m PackagesApplicationResourcesSortKey) validatePackagesApplicationResourcesSortKeyEnum(path, location string, value PackagesApplicationResourcesSortKey) error {
	if err := validate.EnumCase(path, location, value, packagesApplicationResourcesSortKeyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this packages application resources sort key
func (m PackagesApplicationResourcesSortKey) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePackagesApplicationResourcesSortKeyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this packages application resources sort key based on context it is used
func (m PackagesApplicationResourcesSortKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
