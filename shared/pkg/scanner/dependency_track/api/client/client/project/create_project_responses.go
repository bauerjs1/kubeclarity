// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/kubeclarity/shared/pkg/scanner/dependency_track/api/client/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/project] createProject", response, response.Code())
	}
}

// NewCreateProjectCreated creates a CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

/*
CreateProjectCreated describes a response with status code 201, with default header values.

successful operation
*/
type CreateProjectCreated struct {
	Payload *models.Project
}

// IsSuccess returns true when this create project created response has a 2xx status code
func (o *CreateProjectCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project created response has a 3xx status code
func (o *CreateProjectCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project created response has a 4xx status code
func (o *CreateProjectCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project created response has a 5xx status code
func (o *CreateProjectCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project created response a status code equal to that given
func (o *CreateProjectCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create project created response
func (o *CreateProjectCreated) Code() int {
	return 201
}

func (o *CreateProjectCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectCreated) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectCreated) GetPayload() *models.Project {
	return o.Payload
}

func (o *CreateProjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUnauthorized creates a CreateProjectUnauthorized with default headers values
func NewCreateProjectUnauthorized() *CreateProjectUnauthorized {
	return &CreateProjectUnauthorized{}
}

/*
CreateProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectUnauthorized struct {
}

// IsSuccess returns true when this create project unauthorized response has a 2xx status code
func (o *CreateProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project unauthorized response has a 3xx status code
func (o *CreateProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project unauthorized response has a 4xx status code
func (o *CreateProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project unauthorized response has a 5xx status code
func (o *CreateProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project unauthorized response a status code equal to that given
func (o *CreateProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create project unauthorized response
func (o *CreateProjectUnauthorized) Code() int {
	return 401
}

func (o *CreateProjectUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectUnauthorized ", 401)
}

func (o *CreateProjectUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectUnauthorized ", 401)
}

func (o *CreateProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectConflict creates a CreateProjectConflict with default headers values
func NewCreateProjectConflict() *CreateProjectConflict {
	return &CreateProjectConflict{}
}

/*
CreateProjectConflict describes a response with status code 409, with default header values.

A project with the specified name already exists
*/
type CreateProjectConflict struct {
}

// IsSuccess returns true when this create project conflict response has a 2xx status code
func (o *CreateProjectConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project conflict response has a 3xx status code
func (o *CreateProjectConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project conflict response has a 4xx status code
func (o *CreateProjectConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project conflict response has a 5xx status code
func (o *CreateProjectConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create project conflict response a status code equal to that given
func (o *CreateProjectConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create project conflict response
func (o *CreateProjectConflict) Code() int {
	return 409
}

func (o *CreateProjectConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectConflict ", 409)
}

func (o *CreateProjectConflict) String() string {
	return fmt.Sprintf("[PUT /v1/project][%d] createProjectConflict ", 409)
}

func (o *CreateProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
