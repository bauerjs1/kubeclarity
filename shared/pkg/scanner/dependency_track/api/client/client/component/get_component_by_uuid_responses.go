// Code generated by go-swagger; DO NOT EDIT.

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/kubeclarity/shared/pkg/scanner/dependency_track/api/client/models"
)

// GetComponentByUUIDReader is a Reader for the GetComponentByUUID structure.
type GetComponentByUUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentByUUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentByUUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetComponentByUUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetComponentByUUIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentByUUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/component/{uuid}] getComponentByUuid", response, response.Code())
	}
}

// NewGetComponentByUUIDOK creates a GetComponentByUUIDOK with default headers values
func NewGetComponentByUUIDOK() *GetComponentByUUIDOK {
	return &GetComponentByUUIDOK{}
}

/*
GetComponentByUUIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetComponentByUUIDOK struct {
	Payload *models.Component
}

// IsSuccess returns true when this get component by Uuid o k response has a 2xx status code
func (o *GetComponentByUUIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component by Uuid o k response has a 3xx status code
func (o *GetComponentByUUIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component by Uuid o k response has a 4xx status code
func (o *GetComponentByUUIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component by Uuid o k response has a 5xx status code
func (o *GetComponentByUUIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component by Uuid o k response a status code equal to that given
func (o *GetComponentByUUIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component by Uuid o k response
func (o *GetComponentByUUIDOK) Code() int {
	return 200
}

func (o *GetComponentByUUIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidOK  %+v", 200, o.Payload)
}

func (o *GetComponentByUUIDOK) String() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidOK  %+v", 200, o.Payload)
}

func (o *GetComponentByUUIDOK) GetPayload() *models.Component {
	return o.Payload
}

func (o *GetComponentByUUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Component)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentByUUIDUnauthorized creates a GetComponentByUUIDUnauthorized with default headers values
func NewGetComponentByUUIDUnauthorized() *GetComponentByUUIDUnauthorized {
	return &GetComponentByUUIDUnauthorized{}
}

/*
GetComponentByUUIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetComponentByUUIDUnauthorized struct {
}

// IsSuccess returns true when this get component by Uuid unauthorized response has a 2xx status code
func (o *GetComponentByUUIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component by Uuid unauthorized response has a 3xx status code
func (o *GetComponentByUUIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component by Uuid unauthorized response has a 4xx status code
func (o *GetComponentByUUIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component by Uuid unauthorized response has a 5xx status code
func (o *GetComponentByUUIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get component by Uuid unauthorized response a status code equal to that given
func (o *GetComponentByUUIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get component by Uuid unauthorized response
func (o *GetComponentByUUIDUnauthorized) Code() int {
	return 401
}

func (o *GetComponentByUUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidUnauthorized ", 401)
}

func (o *GetComponentByUUIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidUnauthorized ", 401)
}

func (o *GetComponentByUUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentByUUIDForbidden creates a GetComponentByUUIDForbidden with default headers values
func NewGetComponentByUUIDForbidden() *GetComponentByUUIDForbidden {
	return &GetComponentByUUIDForbidden{}
}

/*
GetComponentByUUIDForbidden describes a response with status code 403, with default header values.

Access to the specified component is forbidden
*/
type GetComponentByUUIDForbidden struct {
}

// IsSuccess returns true when this get component by Uuid forbidden response has a 2xx status code
func (o *GetComponentByUUIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component by Uuid forbidden response has a 3xx status code
func (o *GetComponentByUUIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component by Uuid forbidden response has a 4xx status code
func (o *GetComponentByUUIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component by Uuid forbidden response has a 5xx status code
func (o *GetComponentByUUIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component by Uuid forbidden response a status code equal to that given
func (o *GetComponentByUUIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component by Uuid forbidden response
func (o *GetComponentByUUIDForbidden) Code() int {
	return 403
}

func (o *GetComponentByUUIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidForbidden ", 403)
}

func (o *GetComponentByUUIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidForbidden ", 403)
}

func (o *GetComponentByUUIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetComponentByUUIDNotFound creates a GetComponentByUUIDNotFound with default headers values
func NewGetComponentByUUIDNotFound() *GetComponentByUUIDNotFound {
	return &GetComponentByUUIDNotFound{}
}

/*
GetComponentByUUIDNotFound describes a response with status code 404, with default header values.

The component could not be found
*/
type GetComponentByUUIDNotFound struct {
}

// IsSuccess returns true when this get component by Uuid not found response has a 2xx status code
func (o *GetComponentByUUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component by Uuid not found response has a 3xx status code
func (o *GetComponentByUUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component by Uuid not found response has a 4xx status code
func (o *GetComponentByUUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component by Uuid not found response has a 5xx status code
func (o *GetComponentByUUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component by Uuid not found response a status code equal to that given
func (o *GetComponentByUUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component by Uuid not found response
func (o *GetComponentByUUIDNotFound) Code() int {
	return 404
}

func (o *GetComponentByUUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidNotFound ", 404)
}

func (o *GetComponentByUUIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/component/{uuid}][%d] getComponentByUuidNotFound ", 404)
}

func (o *GetComponentByUUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
